{{!
/* Copyright IBM Corp. 2015
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
}}

package {{package}};

import com.wordnik.swagger.annotations.*;


{{#imports}}import {{import}};
{{/imports}}

import java.util.List;
import {{package}}.NotFoundException;

import com.google.inject.Inject;
import javax.ws.rs.core.Response;
import javax.ws.rs.*;

@SuppressWarnings("all")
@Path("/{{baseName}}")
@Api(value = "/{{baseName}}", description = "the {{baseName}} API")
{{#operations}}
public class {{classname}} {

   {{classname}}Interface apiImpl;
   
   @Inject
   public {{classname}}( {{classname}}Interface impl ) {
   		apiImpl = impl;
   } 

  {{#operation}}
  @{{httpMethod}}
  {{#subresourceOperation}}@Path("{{path}}"){{/subresourceOperation}}
  {{#hasConsumes}}@Consumes({ {{#consumes}}"{{mediaType}}"{{#hasMore}}, {{/hasMore}}{{/consumes}} }){{/hasConsumes}}
  {{#hasProduces}}@Produces({ {{#produces}}"{{mediaType}}"{{#hasMore}}, {{/hasMore}}{{/produces}} }){{/hasProduces}}
  // {{returnType}}
  @ApiOperation(value = "{{{summary}}}", notes = "{{{notes}}}", response = {{{returnType}}}.class{{#returnContainer}}, responseContainer = "{{{returnContainer}}}"{{/returnContainer}})
  @ApiResponses(value = { {{#responses}}
    @ApiResponse(code = {{{code}}}, message = "{{{message}}}"{{#baseType}}, response = {{{baseType}}}{{#isListContainer}}[]{{/isListContainer}}.class{{/baseType}}){{#hasMore}},
    {{/hasMore}}{{/responses}} })

  public Response {{nickname}}({{#allParams}}{{>queryParams}}{{>pathParams}}{{>headerParams}}{{>bodyParams}}{{>formParams}}{{#hasMore}},
    {{/hasMore}}{{/allParams}})
      throws NotFoundException {
      
         // invoke the api impl
		return apiImpl.{{nickname}}( {{#allParams}}{{paramName}}{{#hasMore}}, {{/hasMore}}{{/allParams}}  );     
 
  }

  {{/operation}}
}
{{/operations}}
